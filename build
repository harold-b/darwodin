#!/usr/bin/env bash
set -eo pipefail
cd $( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


out_dir=.bin
thread_count=8

if [[ $OSTYPE == 'darwin'* ]]; then
    thread_count=$(sysctl -n hw.logicalcpu)
else
    thread_count=$(nproc --all)
fi

debug_args=(
  "-o:speed"
)
extra_args=()

lite=
ios=
iphonesim=
is_lib=


while true; do
  case $1 in
    -j)
      shift && thread_count=$1 || exit 1
    ;;
    -debug)
      debug_args=(
        "-o:none"
        "-debug"
        #"-show-debug-messages"
        # "-show-system-calls"
        # -show-more-timings
        -keep-temp-files
        # -use-separate-modules
        -use-single-module
      )
    ;;
    -lite)
      lite=1
    ;;
    -l)
      lite=1
    ;;
    -ios)
      ios=1
    ;;
    -iphonesim)
      iphonesim=1
    ;;
    -timings)
      extra_args+=(-show-more-timings)
    ;;
    -out)
        shift && out_dir=$1 || exit 1
    ;;
    -obj)
      # Compile to object file
      extra_args+=(-build-mode:obj)
      is_lib=1
    ;;
  esac
  shift || break
done


root='.'
if [[ ${lite} -eq 1 ]]; then
  root="./darwodin-macos-lite"
else
  root="./darwodin-macos"
fi

if [[ "${ios}" -eq 1 ]] || [[ "${iphonesim}" -eq 1 ]]; then
  root="./darwodin-ios"

  if [[ "${ios}" -eq 1 ]]; then
    extra_args+=(-subtarget:iphone)
  else
    extra_args+=(-subtarget:iphonesimulator)
  fi

  if [[ ${lite} -eq 1 ]]; then
    root="./darwodin-ios-lite"
  fi
fi

mkdir -p "${out_dir}"

TIMEFORMAT='Build Time: %R seconds'
set -x
time {
    # "-minimum-os-version:17.04" \
odin build samples/metal_app \
    "-collection:samples=./samples" \
    "-collection:root=${root}" \
    "-out:${out_dir}/main" \
    ${debug_args[@]} \
    -thread-count:${thread_count} \
    -target:darwin_arm64 \
    ${extra_args[@]}
}
set +x


if [[ "${ios}" -eq 1 ]] || [[ "${iphonesim}" -eq 1 ]]; then
  if [[ ${is_lib} -ne 1 ]]; then
    ./make-ios-app
  fi
fi
