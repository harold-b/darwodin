#!/usr/bin/env bash
set -eo pipefail
cd $( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

use_ios=
framework=
include=

while true; do
  case $1 in
    -ios)
      use_ios=1
    ;;
    -framework|-f)
      shift && framework=$1 || exit 1
    ;;
    -i)
      shift && include=$1 || exit 1
    ;;
  esac
  shift || break
done

if [[ -z "$framework" ]]; then
  echo "Error: No framework specified."
  exit 1
fi


CGEN=${CGEN:-cgen}

XCODE_CLANG_VERSION=16
sysroot_macos="$(xcrun --sdk macosx --show-sdk-path)"
xcode_toolchain_include="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/${XCODE_CLANG_VERSION}/include"

# export sdk_frameworks_macos="${sysroot_macos}/System/Library/Frameworks"
# export sdk_frameworks_ios="${sysroot_ios}/System/Library/Frameworks"

# frameworks_path=${sdk_frameworks_macos}
sysroot=${sysroot_macos}
target=arm64-apple-macos15.0
target_ios=arm64-apple-ios18.0
out_dir=definitions/macos

if [[ ${use_ios} -eq 1 ]]; then
  sysroot="$(xcrun --sdk iphoneos --show-sdk-path)"
  target=${target_ios}
  out_dir=definitions/ios
fi

source ./config
framework=$(darwodin_filter_framework $framework $use_ios)

frameworks_path="${sysroot}/System/Library/Frameworks"

framework_lower="$(echo $framework | tr '[:upper:]' '[:lower:]')"
out_file="${framework_lower}.json"


if [[ -z "$include" ]]; then
  # The header might not match the framework, so map it if necessarry
  include=$(darwodin_get_header_for_framework $framework)
fi

echo "Framework: '$framework': '${include}.h'"


header="$(mktemp).h"
echo "#import <${include}/${include}.h>" > $header

defs=()
# Avoid error "error: property with 'retain (or strong)' attribute must be of object type"
# with dispatch_queue_t
if [[ "$framework_lower" == "gamekit" ]]; then
  defs+=(-DOS_OBJECT_USE_OBJC=1)
elif [[ "$framework_lower" != "gamecontroller" ]]; then
  defs+=(-DOS_OBJECT_USE_OBJC=0)
fi


  # "-isystem${sysroot}/usr/include/c++/v1" \
  # "-isystem${sysroot}/usr/include" \
  # -DOS_OBJECT_USE_OBJC=1 \

echo " > ${out_dir}/${out_file}"
${CGEN} -ObjC --no-sysroot --sysroot "${sysroot}" \
  ${defs[@]} \
  "-isystem${xcode_toolchain_include}" \
  "-F${frameworks_path}/" \
  -target ${target} ${header} ${out_dir}/${out_file}
